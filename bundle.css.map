{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Card from \"/Card.svelte\";\n\n  let custom_items = [];\n\n  /* async function fetchCustomItem() {\n                                                            const response = await fetch(\n                                                              \"https://gitlab.com/RavaGames/madlab/-/raw/master/Content/customitem.txt\"\n                                                            );\n                                                            const customItem = await response.json();\n                                                            custom_items.push(customItem);\n\n                                                            fetchCustomItem();\n                                                          } */\n\n  /* async function getCustomItems() {\n    const response = await fetch(\"/db/database.json\"); // Load data from the local JSON file\n    const data = await response.json(); // Parse the JSON data\n    return data;\n  }*/\n  async function getCustomItems() {\n    try {\n      const response = await fetch(\n        \"https://gitlab.com/RavaGames/madlab/-/blob/df5d33d9d28b13cf1b67a214e3526e67743ce917/Content/customitem.txt#L1951\",\n        { mode: \"cors\" }\n      );\n      const text = await response.text();\n      const regex = /{id:(\\d+),\\sname:\"([^\"]+)\"}/g;\n      let match;\n      while ((match = regex.exec(text)) !== null) {\n        const id = parseInt(match[1], 10);\n        const name = match[2];\n        custom_items.push({\n          /* \n                      id,\n            label,\n            name,\n            contentType,\n            content,\n            permalink,\n            tab_contents_url,\n            tab_link,\n            externally_submitted,\n            author,\n            desc,\n            rating,\n            loads\n            */\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  getCustomItems();\n\n  let modal = false;\n\n  let itemsPerPage = 12;\n  let currentPage = 1;\n  $: visibleItems = custom_items.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage\n  );\n</script>\n\n<div class=\"content w-full h-full bg-black\" style=\"overflow:auto;\">\n<div class=\"text-white text-4xl flex justify-center justify-items-center content-center content-items-center flex-col w-full\">\n<p class=\"justify-center content-center flex\">Mutilate-a-Doll 2 (Custom Items list)</p>\n<div class=\"justify-center content-center flex content bg-black flex content-items-center content-self-center align-center align-items-center flex-row\">\n  <button class=\"button-page justify-center h-10 text-lg m-5\" on:click={() => { currentPage--; }}>Previous page</button>\n  <button class=\"button-page justify-center h-10 text-lg  m-5\" on:click={() => { currentPage++; }}>Next page</button>\n</div>\n</div>\n<input class=\"text-black text-xl flex justify-center content-center rounded-full\" placeholder=\"Search for items\" style=\"color:#333333;background:#151515;text-align:center;margin: 0px 5px;\"/>\n  <div class=\"grid grid-cols-4 gap-10\">\n  {#each visibleItems as item}\n    <Card {...item} on:click={() => {\n      modal = true;\n      setTimeout(function() {\n          modal = false;\n        }, 5000);\n       const textToCopy = `${item.content}`;\n      navigator.clipboard.writeText(textToCopy)\n      .then(() => {\n        console.log(\"Text copied to clipboard:\", textToCopy);\n        \n      })\n      .catch(error => {\n        console.error(\"Error copying text to clipboard:\", error);\n      });\n    }}/>\n  {/each}\n  </div>\n</div>\n{#if modal === true}\n  <div style=\"color:#cecece;border-radius:10px;border-color:#333333;border-width:1px;border-style:solid;background-color:rgb(30 30 30 / 88%);font-weight:bolder;margin:5px 30%;width:50%;transition: transform 1s ease-in-out;\" class=\"popout fixed text-white flex content-center justify-center flex-row top-0 fixed\">COPIED</div>\n{/if}\n<style>\n  .popout {\n    animation: popout 0.5s ease;\n  }\n\n  .content::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  .content::-webkit-scrollbar-thumb {\n    color: #222222;\n    background: #222222;\n  }\n\n  .content::-webkit-scrollbar-track {\n    background: #333333;\n  }\n\n  @keyframes popout {\n    0% {\n      transform: translate(0px, -31px);\n    }\n    50% {\n      transform: translate(0px, 30px);\n    }\n    100% {\n      transform: translate(0px, 0px);\n    }\n  }\n\n  .button-page {\n    background: #151515;\n    border-style: solid;\n    border-color: #333333;\n    border-width: 4px;\n    border-radius: 245px;\n    width: 20%;\n    transition: all 0.5s ease;\n  }\n\n  .button-page:active {\n    box-shadow: inset 0 0 25px 5px #2ba52b;\n    border-color: #2ba52b;\n    border-width: 6px;\n  }\n\n  .button-page:hover {\n    border-color: #2b6ea5;\n    border-width: 4px;\n  }\n</style>\n\n"
  ],
  "names": [],
  "mappings": "AAoGE,OAAO,cAAC,CAAC,AACP,SAAS,CAAE,oBAAM,CAAC,IAAI,CAAC,IAAI,AAC7B,CAAC,AAED,sBAAQ,mBAAmB,AAAC,CAAC,AAC3B,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,sBAAQ,yBAAyB,AAAC,CAAC,AACjC,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,sBAAQ,yBAAyB,AAAC,CAAC,AACjC,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,WAAW,oBAAO,CAAC,AACjB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,AAClC,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,AACjC,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,AAChC,CAAC,AACH,CAAC,AAED,YAAY,cAAC,CAAC,AACZ,UAAU,CAAE,OAAO,CACnB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,GAAG,CACjB,aAAa,CAAE,KAAK,CACpB,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IAAI,AAC3B,CAAC,AAED,0BAAY,OAAO,AAAC,CAAC,AACnB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CACtC,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,0BAAY,MAAM,AAAC,CAAC,AAClB,YAAY,CAAE,OAAO,CACrB,YAAY,CAAE,GAAG,AACnB,CAAC"
}